---
- name: Check that is proxmox
  stat:
    path: /etc/pve
  register: is_proxmox
  when: ansible_distribution == "Debian"

- name: Install linux headers when debian proxmox
  apt:
    update_cache: yes
    state: present
    name: pve-headers
  when: ansible_distribution == "Debian" and is_proxmox.stat.exists

- name: Add backports repository (Debian)
  block:
    - name: Add backports repository list (Debian)
      copy:
        src: templates/backports.list
        dest: /etc/apt/sources.list.d/backport.list
        mode: 0644

    - name: Add backports repository key (Debian)
      apt_key:
        url: https://ftp-master.debian.org/keys/archive-key-{{ ansible_lsb.release }}.asc
        state: present
  when:
    - ansible_distribution == "Debian" and debian_enable_backports and ansible_architecture != "armv61"


- name: Install wireguard (apt)
  apt:
    update_cache: yes
    state: present
    name: wireguard
  when:
    - ansible_distribution == "Ubuntu" or ansible_distribution == "Debian" and ansible_architecture != "armv6l"

- name: Install wireguard (pacman)
  pacman:
    name:
      - wireguard-dkms
      - wireguard-tools
    state: present
  when:
    - ansible_distribution == "Archlinux"

- name: Install wireguard (CentOS 8)
  block:
    - name: Install epel repo (CentOS 8)
      dnf:
        name:
          - elrepo-release
          - epel-release
        state: present

    - name: Install mod and tools (CentOS 8)
      dnf:
        name:
          - kmod-wireguard
          - wireguard-tools
        state: present

    - name: Create path (CentOS 8)
      file:
        path: "{{ wireguard_path }}"
        state: directory
        mode: u=rwx,g=,o=
        group: root

  when: ansible_facts['distribution'] == "CentOS" and ansible_facts['distribution_major_version'] == "8"

- name: Install wireguard (CentOS 7)
  block:
    - name: Install epel (CentOS 7)
      yum:
        name:
          - epel-release
          - https://www.elrepo.org/elrepo-release-7.el7.elrepo.noarch.rpm
        state: present

    - name: Install plugin-elrepo wireguard (CentOS 7)
      yum:
        name:
          - yum-plugin-elrepo
        state: present

    - name: Install wireguard module and tools (CentOS 7)
      yum:
        name:
          - kmod-wireguard
          - wireguard-tools
        state: present

    - name: Creat path (CentOS 7)
      file:
        path: "{{ wireguard_path }}"
        state: directory
        mode: u=rwx,g=,o=
        group: root

  when: ansible_facts['distribution'] == "CentOS" and ansible_facts['distribution_major_version'] == "7"

- name: Install wireguard and tools (zypper)
  zypper:
    name:
      - wireguard-tools
    state: present
  when:
    - ansible_distribution == "openSUSE Leap"

- name: Ensure wireguard_path exists as directory
  file:
    path: "{{ wireguard_path }}"
    state: directory
    mode: 0755

- name: Read private key
  stat:
    path: "{{ wireguard_path }}/privatekey"
  register: privatekey
  when: not ansible_check_mode

- name: Generate wireguard keys
  shell: set -o pipefail && \
         umask 077; wg genkey | tee {{ wireguard_path  }}/privatekey | wg pubkey > {{ wireguard_path }}/publickey
  args:
    executable: /bin/bash
  when:
    - not ansible_check_mode
    - not privatekey.stat.exists

- name: Read private key
  slurp:
    src: "{{ wireguard_path }}/privatekey"
  register: private
  when: not ansible_check_mode

- name: Read public key
  slurp:
    src: "{{ wireguard_path }}/publickey"
  register: public
  when: not ansible_check_mode

- name: Generate wireguard client's keys
  shell: set -o pipefail && \
         umask 077; [[ ! -f {{ wireguard_path }}/client_{{ item.name }}_privatekey ]] && wg genkey | tee {{ wireguard_path  }}/client_{{ item.name }}_privatekey | wg pubkey > {{ wireguard_path }}/client_{{ item.name }}_publickey || true
  run_once: true
  args:
    executable: /bin/bash
  when:
    - clients | length > 0
  loop: "{{ clients }}"

- name: Read private client's key
  slurp:
    src: "{{ wireguard_path }}/client_{{ item.name }}_privatekey"
  register: client_privatekey
  run_once: true
  when:
    - not ansible_check_mode
    - clients | length > 0
  loop: "{{ clients }}"

- name: Read public client's key
  slurp:
    src: "{{ wireguard_path }}/client_{{ item.name }}_publickey"
  register: client_publickey
  run_once: true
  when:
    - not ansible_check_mode
    - clients | length > 0
  loop: "{{ clients }}"

- name: Print the gateway for each host when defined
  ansible.builtin.debug:
    msg: LOOK HERE {{ client_publickey }}

- name: Bring default post-up script
  template:
    src: post-up.sh.j2
    dest: "{{ wireguard_path }}/post-up.sh"
    owner: root
    group: root
    mode: 0750

- name: Bring default post-down script
  template:
    src: post-down.sh.j2
    dest: "{{ wireguard_path }}/post-down.sh"
    owner: root
    group: root
    mode: 0750

- name: Generate configs
  template:
    src: interface.conf.j2
    dest: "{{ wireguard_path }}/{{ wireguard_network_name }}.conf"
    owner: root
    group: root
    mode: "u=rw,g=r,o="
  register: config
  when:
    - not ansible_check_mode
  notify:
    - Enable wg-quick service
    - Restart wg-quick service

- name: Generate client's config
  template:
    src: client.conf.j2
    dest: "~/wireguard-{{ item.name }}.conf"
    mode: "u=rw,g=,o="
  vars:
    ansible_connection: local
  become: no
  run_once: true
  when:
    - not ansible_check_mode
    - clients | length > 0
  delegate_to: localhost
  loop: "{{ clients }}"
  loop_control:
    index_var: loop_index

- name: Allow ipv4 forwarding
  sysctl:
    name: net.ipv4.ip_forward
    value: '1'
    sysctl_set: yes

- name: Allow wireguard port from outside
  iptables:
    chain: INPUT
    protocol: udp
    destination_port: "{{ wireguard_port }}"
    jump: ACCEPT
